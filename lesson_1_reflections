How did viewing a diff between two versions of a file help you see the bug that was introduced? - Using diff is a lot easier, and more efficient, despite the fact that my Terminal experience is pretty poor.
How could having easy access to the entire history of a file make you a more efficient programmer in the long term? You could identify patterns in programing, including common errors.  You might identify insights for future use.
What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does? Manually choosing allows for logical choices after completed changes, but it is reliant on memory and recognition of a change.
Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately? Git is used for projects making use of multiple files.
How can you use the commands git log and git diff to view the history of files? git log allows one to see all the different commits, along with comments about the changes.  git diff allows a more granular view of the differences between two different commits.
 How might using version control make you more confident to make changes that could break something?  Because you could be more secure about exactly what changes caused which end-result.
Now that you have your workspace set up, what do you want to try using Git for?  All sorts of programming!